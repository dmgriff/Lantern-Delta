
const $ = (s, r=document)=>r.querySelector(s);
const q = (k, fb=null)=> new URL(location.href).searchParams.get(k) ?? fb;
async function fetchJSON(path){ const res=await fetch(path, {cache:"no-store"}); if(!res.ok) throw new Error("Fetch failed "+path); return res.json(); }
function fmtPair(a,b){ const f=n=>(n==null?"â€“":new Intl.NumberFormat('en-GB').format(n)); return `${f(a)} / ${f(b)}`; }
function renderGrid(el, rows){ el.innerHTML=""; rows.forEach(r=>{ const a=document.createElement(r.href?"a":"div"); a.className="tile"; if(r.href) a.href=r.href; a.innerHTML=`<div class="num">${r.value}</div><div class="label">${r.label}</div>`; el.appendChild(a); }); }
function flash(m){ const d=document.createElement("div"); d.style.position="fixed"; d.style.bottom="10px"; d.style.right="10px"; d.style.border="1px solid #eaeaea"; d.style.background="#fff"; d.style.fontSize="12px"; d.style.padding="8px 10px"; d.textContent=m; document.body.appendChild(d); setTimeout(()=>d.remove(),1600); }
function installTest(){ const b=$("#test-toggle"); if(!b) return; b.onclick=()=>{ const on = document.body.dataset.test==="1"; document.body.dataset.test= on?"0":"1"; flash(`Test mode: ${on?"off":"on (sample)"}`); if($("#review-root")) loadReview(); if($("#papers-root")) loadPapers(); }; }
async function loadHome(){ const ix = await fetchJSON("data/reviews_index.json"); const list=$("#reviews"); ix.reviews.forEach(r=>{ const row=document.createElement("div"); row.className="card"; row.innerHTML=`<div style="display:flex;justify-content:space-between;align-items:center;gap:10px"><div><div style="font-weight:600">${r.title}</div><div class="small muted">${r.slug}</div></div><a class="btn" href="review.html?slug=${encodeURIComponent(r.slug)}" style="border:1px solid #111;padding:6px 10px;font-size:13px">open</a></div>`; list.appendChild(row); }); }
async function loadReview(){ const slug=q("slug","sample_ic_anaemia"); const sample=document.body.dataset.test==="1"; const path = sample? "data/sample_ic_anaemia/summary.json" : `data/${slug}/summary.json`; const s=await fetchJSON(path);
  $("#review-title").textContent=s.title; $("#review-updated").textContent=s.updated_utc||""; $("#hidden-home").href="index.html";
  const m=s.metrics; const rows=[
    {label:"Trials", value:fmtPair(m.types.trial_12m, m.types.trial_total), href:`papers.html?slug=${slug}&type=trial`},
    {label:"Systematic Reviews", value:fmtPair(m.types.systematic_review_12m, m.types.systematic_review_total), href:`papers.html?slug=${slug}&type=systematic_review`},
    {label:"IV Iron", value:fmtPair(m.interventions.iv_iron_12m, m.interventions.iv_iron_total), href:`papers.html?slug=${slug}&intervention=iv_iron`},
    {label:"ESAs", value:fmtPair(m.interventions.esa_12m, m.interventions.esa_total), href:`papers.html?slug=${slug}&intervention=esa`},
    {label:"Other PBM", value:fmtPair(m.interventions.other_pbm_12m, m.interventions.other_pbm_total), href:`papers.html?slug=${slug}&intervention=other_pbm`},
    {label:"ICU", value:fmtPair(m.populations.icu_12m, m.populations.icu_total), href:`papers.html?slug=${slug}&pop=icu`},
    {label:"Post-ICU", value:fmtPair(m.populations.post_icu_12m, m.populations.post_icu_total), href:`papers.html?slug=${slug}&pop=post_icu`},
    {label:"Other Pops", value:fmtPair(m.populations.other_12m, m.populations.other_total), href:`papers.html?slug=${slug}&pop=other`},
  ]; renderGrid($("#grid"), rows); $("#snapshot").innerHTML = s.summary_html || "<p class='muted'>No synthesis yet.</p>"; }
async function loadPapers(){ const slug=q("slug","sample_ic_anaemia"); const sample=document.body.dataset.test==="1"; const path = sample? "data/sample_ic_anaemia/papers.json" : `data/${slug}/papers.json`; const data=await fetchJSON(path);
  $("#back-review").href=`review.html?slug=${slug}`; $("#hidden-home").href="index.html"; const p=new URL(location.href).searchParams; const typ=p.get("type"), intr=p.get("intervention"), pop=p.get("pop"), saf=p.get("safety");
  let list = data.papers.filter(x=>!x.exclude_reason);
  if(typ) list=list.filter(x=>(x.type||"").toLowerCase()===typ.toLowerCase()); if(intr) list=list.filter(x=>(x.intervention||"")===intr); if(pop) list=list.filter(x=>(x.population||"other")===pop); if(saf==="1") list=list.filter(x=>(x.flags||[]).includes("safety"));
  const root=$("#paper-cards"); root.innerHTML=""; list.forEach(p=>{ const c=document.createElement("div"); c.className="card"; c.innerHTML=`<div style="display:flex;justify-content:space-between;gap:10px;align-items:flex-start"><div style="max-width:80%"><div style="font-weight:600">${p.title}</div><div class="meta"><span>${(p.authors||[]).join(", ")||"Unknown"}</span><span>${p.journal||""}</span><span>${p.published||""}</span>${p.pmid?`<span>PMID: ${p.pmid}</span>`:""}${p.doi?`<span>DOI: <a target="_blank" href="https://doi.org/${p.doi}">${p.doi}</a></span>`:""}</div><details open style="margin-top:8px"><summary>AI summary</summary><div>${p.summary_html || "<span class='muted'>Pending.</span>"}</div></details>${p.abstract_html?`<details style="margin-top:6px"><summary>Abstract</summary><div>${p.abstract_html}</div></details>`:""}</div><div style="display:flex;flex-direction:column;gap:6px;align-items:flex-end"><span class="badge">${p.type||"unknown"}</span><span class="badge">${p.intervention||"unspecified"}</span><span class="badge">${p.population||"other"}</span></div></div>`; root.appendChild(c); }); }
window.addEventListener("DOMContentLoaded", ()=>{ if($("#home-root")) loadHome(); if($("#review-root")){ loadReview(); installTest(); } if($("#papers-root")){ loadPapers(); installTest(); } });
